/* BST Node
struct Node
{
	int key;
	struct Node *left, *right;
};
*/

// This function finds predecessor and successor of key in BST.
// It sets pre and suc as predecessor and successor respectively

void succ(Node* root, Node*& suc, int key)
{
     while(root != NULL)
    {
        if(root->key <= key)
        root = root->right;
        else if(root->key > key)
        {
            suc = root;
            root = root->left;
        }
    }
}
void pred(Node* root, Node*& pre, int key)
{
    while(root != NULL)
    {
        if(root->key >= key)
        root = root->left;
        else if(root->key < key)
        {
            pre = root;
            root = root->right;
        }
    }
}
void findPreSuc(Node* root, Node*& pre, Node*& suc, int key)
{

// Your code goes here
//approach 1 : using temp array to store inorder 
pred(root, pre, key);
succ(root, suc, key);
}