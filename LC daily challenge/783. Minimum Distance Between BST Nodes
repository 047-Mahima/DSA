/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
void inorder(TreeNode* root, vector<int>& storeInorder)
{
    if(root == NULL) return;
    inorder(root->left, storeInorder);
    storeInorder.push_back(root->val);
    inorder(root->right, storeInorder);
}

class Solution {
public:
    int minDiffInBST(TreeNode* root) {
        int diff = 0, minDiff = INT_MAX;
        vector<int> storeInorder;
        inorder(root, storeInorder);
        
        for(int i = 0 ; i < storeInorder.size() ; i++)
        {
            for(int j = i+1 ; j < storeInorder.size(); j++)
            {
                diff = storeInorder[j] - storeInorder[i];
                cout<<"Diff is "<<diff<<endl;
                minDiff = min(minDiff, diff);
                cout<<"Min Diff is "<<minDiff<<endl;
            }
        }
        return minDiff;
    }
};
